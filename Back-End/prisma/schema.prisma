generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SystemUser {
  id       Int    @id @default(autoincrement()) @map("id")
  name     String @map("nome")
  userName String @unique @map("usuario")
  password String @map("senha")

  @@map("usuarios")
}

model Teacher {
  id       Int    @id @default(autoincrement()) @map("id")
  name     String @map("nome")
  userName String @unique @map("usuario")
  password String @map("senha")
  phone    String @map("telefone")
  email    String @map("e-mail")

  @@map("professores")
}

model Student {
  id          Int                @id @default(autoincrement()) @map("id")
  name        String             @map("nome")
  userName    String             @unique @map("usuario")
  password    String             @map("senha")
  phone       String             @map("telefone")
  email       String             @map("e-mail")
  certificates Certificate[]
  workshops    StudentWorkshop[]  // Relacionamento com workshops

  @@map("alunos")
}

model Certificate {
  id        Int      @id @default(autoincrement())
  pdfLink   String
  studentId Int
  student   Student  @relation(fields: [studentId], references: [id])
  createdAt DateTime @default(now())
}

model Workshop {
  id           Int                @id @default(autoincrement()) @map("id")
  title        String             @map("titulo")
  description  String             @map("descricao")
  professor    String             @map("professor")
  workshopDate String             @map("data")
  hour         String             @map("horas")
  students     StudentWorkshop[]  // Relacionamento com alunos

  @@map("workshop")
}

model StudentWorkshop {
  id         Int      @id @default(autoincrement())
  studentId  Int
  workshopId Int
  student    Student  @relation(fields: [studentId], references: [id])
  workshop   Workshop @relation(fields: [workshopId], references: [id])
  createdAt  DateTime @default(now())

  @@unique([studentId, workshopId]) // Garante que o aluno nÃ£o seja cadastrado duas vezes no mesmo workshop
}